name: Manual Deployment NonProd

on:
  workflow_dispatch:
    inputs:
      api-image:
        description: "API-IMAGE URI"
        required: true
      transcript-image:
        description: "TRANSCRIPT-IMAGE URI"
        required: true

jobs:
  pack-deploy-api:
    runs-on: ubuntu-latest
    if: contains('
      refs/heads/qa
      refs/heads/performance
      ', github.ref)
    steps:
      - uses: actions/checkout@v2
      - name: Extract Branch Name
        id: extract-branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update environment files
        run: aws s3 sync s3://environment-files-qa s3://environment-files-${{ steps.extract-branch.outputs.branch }} --metadata-directive REPLACE --cache-control 'max-age=86400,must-revalidate,public' --delete

      - name: Set New API Image to Amazon ECS Task Definition
        id: api-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./.github/workflows/task-definition-${{ steps.extract-branch.outputs.branch }}.json
          container-name: prp-be-container-${{ steps.extract-branch.outputs.branch }}
          image: ${{ github.event.inputs.api-image }}

      - name: Update Amazon ECS Cluster Service for QA environment
        if: contains('refs/heads/qa', github.ref)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.api-task-def.outputs.task-definition }}
          service: prp-be-srv-${{ steps.extract-branch.outputs.branch }}
          cluster: prp-cluster-nonprod
          wait-for-service-stability: true

      - name: Update Amazon ECS Cluster Service for Performance environment
        if: contains('refs/heads/performance', github.ref)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.api-task-def.outputs.task-definition }}
          service: prp-be-srv-${{ steps.extract-branch.outputs.branch }}
          cluster: prp-cluster-performance
          wait-for-service-stability: true          

  pack-deploy-transcript:
    runs-on: ubuntu-latest
    if: contains('
      refs/heads/qa
      refs/heads/performance
      ', github.ref)
    steps:
      - uses: actions/checkout@v2
      - name: Extract Branch Name
        id: extract-branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set New Transcript Service Image to Amazon ECS Task Definition
        id: transcript-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./.github/workflows/transcript-task-definition-${{ steps.extract-branch.outputs.branch }}.json
          container-name: prp-transcript-container-${{ steps.extract-branch.outputs.branch }}
          image: ${{ github.event.inputs.transcript-image }}

      - name: Update Amazon ECS Cluster Service for QA environment
        if: contains('refs/heads/qa', github.ref)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.transcript-task-def.outputs.task-definition }}
          service: prp-transcript-srv-${{ steps.extract-branch.outputs.branch }}
          cluster: prp-cluster-nonprod
          wait-for-service-stability: true

      - name: Update Amazon ECS Cluster Service for Performance environment
        if: contains('refs/heads/performance', github.ref)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.transcript-task-def.outputs.task-definition }}
          service: prp-transcript-srv-${{ steps.extract-branch.outputs.branch }}
          cluster: prp-cluster-performance
          wait-for-service-stability: true          

  deploy-lambdas:
    runs-on: ubuntu-latest
    needs: [pack-deploy-api, pack-deploy-transcript]
    env:
      work-dir: ./src/AWS/Lambdas/UploadExhibitLambda
    if: contains('
      refs/heads/qa
      refs/heads/performance
      ', github.ref)
    steps:
      - uses: actions/checkout@v2
      - name: Extract Branch Name
        id: extract-branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - run: dotnet tool install --global Amazon.Lambda.Tools --version 5.1.4
      - name: Update lambda function for upload exhibits QA env
        working-directory: ${{ env.work-dir }}
        if: ${{ steps.extract-branch.outputs.branch == 'qa' }}
        run: dotnet lambda deploy-function --function-name UploadExhibitQA
      - name: Update lambda function for upload exhibits Performance env
        working-directory: ${{ env.work-dir }}
        if: ${{ steps.extract-branch.outputs.branch == 'performance' }}
        run: dotnet lambda deploy-function --function-name UploadExhibitPerformance
